# proxy.addr configures the HTTP and HTTPS listeners as a comma separated list.
#
# To configure an HTTP listener provide [host]:port.
# To configure an HTTPS listener provide [host]:port;certFile;keyFile;clientAuthFile.
# certFile and keyFile contain the public/private key pair for that listener
# in PEM format. If certFile contains both the public and private key then
# keyFile can be omittted.
# clientAuthFile contains the root CAs for client certificate validation.
# When clientAuthFile is provided the TLS configuration is set to
# RequireAndVerifyClientCert.
#
# Configure a single HTTP listener on port 9999:
#
#     proxy.addr = :9999
#
# Configure both an HTTP and HTTPS listener:
#
#     proxy.addr = :9999,:443;path/to/cert.pem;path/to/key.pem;path/to/clientauth.pem
#
# Configure multiple HTTP and HTTPS listeners on IPv4 and IPv6:
#
#     proxy.addr = \
#       1.2.3.4:9999, \
#       5.6.7.8:9999, \
#       [2001:DB8::A/32]:9999, \
#       [2001:DB8::B/32]:9999, \
#       1.2.3.4:443;path/to/certA.pem;path/to/keyA.pem, \
#       5.6.7.8:443;path/to/certB.pem;path/to/keyB.pem, \
#       [2001:DB8::A/32]:443;path/to/certA.pem;path/to/keyA.pem, \
#       [2001:DB8::B/32]:443;path/to/certB.pem;path/to/keyB.pem
#
proxy.addr = :9999, \
    :8443;/ssl/cert.pem;/ssl/key.pem


# proxy.localip configures the ip address of the proxy which is added
# to the X-Forwarded-For and Forwarded headers.
#
# The local non-loopback address is detected during startup
# but can be overwritten with this property.
#
# The default is
#
# proxy.localip =


# proxy.strategy configures the load balancing strategy.
#
# rnd: pseudo-random distribution
# rr:  round-robin distribution
#
# "rnd" configures a pseudo-random distribution by using the microsecond
# fraction of the time of the request.
#
# "rr" configures a round-robin distribution.
#
# The default is
#
# proxy.strategy = rnd


# proxy.shutdownwait configures the time for a graceful shutdown.
#
# After a signal is caught the proxy will immediately suspend
# routing traffic and respond with a 503 Service Unavailable
# for the duration of the given period.
#
# The default is
#
# proxy.shutdownwait = 0s


# proxy.timeout configures the response header and keep-alive timeout.
#
# This configures the ResponseHeaderTimeout of the http.Transport
# and the KeepAliveTimeout of the network dialer.
#
# The default is
#
# proxy.timeout     = 0s


# proxy.dialtimeout configures the connection timeout.
#
# This configures the DialTimeout of the network dialer.
#
# The default is
#
# proxy.dialtimeout = 30s


# proxy.maxconn configures the maximum number of cached connections.
#
# This configures the MaxConnsPerHost of the http.Transport.
#
# The default is
#
# proxy.maxconn = 10000


# proxy.header.clientip configures the header for the request ip.
#
# The remoteIP is taken from http.Request.RemoteAddr.
# The localIP is either detected or the value of proxy.localip.
#
# When set to 'X-Forwarded-For' the proxy will set this header to
#
#   <remoteIP>, <localIP>
#
# if the header is not set in the incoming request. Otherwise, it
# will just append
#
#   , <localIP>
#
# to the existing header value.
#
# When set to another non-empty value the proxy will set this header
# to
#
#   <remoteIP>
#
# The default is
#
# proxy.header.clientip =


# proxy.header.tls configures the header to set for TLS connections.
#
# When set to a non-empty value the proxy will set this header on every
# TLS request to the value of ${proxy.header.tls.value}
#
# The default is
#
# proxy.header.tls =
# proxy.header.tls.value =


# registry.backend configures which backend is used.
# Supported backends are: consul, static, file
#
# The default is
#
# registry.backend = consul


# registry.static.routes configures a static routing table.
#
# Example:
#
#     registry.static.routes = \
#       route add svc / http://1.2.3.4:5000/
#
# The default is
#
# registry.static.routes =


# registry.file.path configures a file based routing table.
# The value configures the path to the file with the routing table.
#
# The default is
#
# registry.file.path =


# registry.consul.addr configures the address of the consul agent to connect to.
#
# The default is
#
# registry.consul.addr = localhost:8500
registry.consul.addr = consul:8500

# registry.consul.token configures the acl token for consul.
#
# The default is
#
# registry.consul.token =


# registry.consul.kvpath configures the KV path for manual routes.
#
# The consul KV path is watched for changes which get appended to
# the routing table. This allows for manual overrides and weighted
# round-robin routes.
#
# The default is
#
# registry.consul.kvpath = /fabio/config


# registry.consul.tagprefix configures the prefix for tags which define routes.
#
# Services which define routes publish one or more tags with host/path
# routes which they serve. These tags must have this prefix to be
# recognized as routes.
#
# The default is
#
# registry.consul.tagprefix = urlprefix-


# registry.consul.register.addr configures the address for the service registration.
#
# Fabio registers itself in consul with this host:port address.
# It must point to the UI/API endpoint configured by ui.addr and defaults to its
# value.
#
# The default is
#
# registry.consul.register.ip = :9998


# registry.consul.register.name configures the name for the service registration.
#
# Fabio registers itself in consul under this service name.
#
# The default is
#
# registry.consul.register.name = fabio


# registry.consul.register.checkInterval configures the interval for the health check.
#
# Fabio registers an http health check on http://${ui.addr}/health
# and this value tells consul how often to check it.
#
# The default is
#
# registry.consul.register.checkInterval = 1s


# registry.consul.register.checkTimeout configures the timeout for the health check.
#
# Fabio registers an http health check on http://${ui.addr}/health
# and this value tells consul how long to wait for a response.
#
# The default is
#
# registry.consul.register.checkTimeout = 3s


# metrics.target configures the backend the metrics values are
# sent to.
#
# Possible values are:
#  <empty>:  do not report metrics
#  stdout:   report metrics to stdout
#  graphite: report metrics to Graphite on ${metrics.graphite.addr}
#
# The default is
#
# metrics.target =


# metrics.prefix configures the prefix of all reported metrics.
#
# Each metric has a unique name which is hard-coded to
#
#    prefix.service.host.path.target-addr
#
# When set to "default" the prefix is <hostname>.<executable>
#
# The default is
#
# metrics.prefix = default


# metrics.interval configures the interval in which metrics are
# reported.
#
# The default is
#
# metrics.interval = 30s


# metrics.graphite.addr configures the host:port of the Graphite
# server. This is required when ${metrics.target} is set to "graphite".
#
# The default is
#
# metrics.graphite.addr =


# runtime.gogc configures GOGC (the GC target percentage).
#
# Setting runtime.gogc is equivalent to setting the GOGC
# environment variable which also takes precendence over
# the value from the config file.
#
# Increasing this value means fewer but longer GC cycles
# since there is more garbage to collect.
#
# The default of GOGC=100 works for Go 1.4 but shows
# a significant performance drop for Go 1.5 since the
# concurrent GC kicks in more often.
#
# During benchmarking I have found the following values
# to work for my setup and for now I consider them sane
# defaults for both Go 1.4 and Go 1.5.
#
# GOGC=100: Go 1.5 40% slower than Go 1.4
# GOGC=200: Go 1.5 == Go 1.4 with GOGC=100 (default)
# GOGC=800: both Go 1.4 and 1.5 significanlty faster (40%/go1.4, 100%/go1.5)
#
# The default is
#
# runtime.gogc = 800


# runtime.gomaxprocs configures GOMAXPROCS.
#
# Setting runtime.gomaxprocs is equivalent to setting the GOMAXPROCS
# environment variable which also takes precendence over
# the value from the config file.
#
# If runtime.gomaxprocs < 0 then all CPU cores are used.
#
# The default is
#
# runtime.gomaxprocs = -1


# ui.addr configures the address the UI is listening on
#
# The default is
#
# ui.addr = :9998


# ui.color configures the background color of the UI.
# Color names are from http://materializecss.com/color.html
#
# The default is
#
# ui.color = light-green


# ui.title configures an optional title for the UI.
#
# The default is
#
# ui.title =
